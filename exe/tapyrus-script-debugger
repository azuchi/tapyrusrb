#!/usr/bin/env ruby

require "tapyrus"
require "terminal-table"

print "Enter scriptPubkey: "
script_pubkey_hex = gets.chomp
script_pubkey = Tapyrus::Script.parse_from_payload(script_pubkey_hex.htb)
puts script_pubkey unless script_pubkey_hex.empty?

print "Enter scriptSig: "
script_sig_hex = gets.chomp
script_sig = Tapyrus::Script.parse_from_payload(script_sig_hex.htb)
puts script_sig unless script_sig_hex.empty?

unless script_sig.push_only?
  warn "scriptSig has non-push opcode."
  puts
end

if script_pubkey_hex.empty? && script_sig.empty?
  puts "Empty script."
  exit
end

print "Enter tx: "
tx_hex = gets.chomp
tx = nil
input_index = nil
unless tx_hex.length == 0
  print "Enter index of the input: "
  input_index = gets.chomp
  begin
    tx = Tapyrus::Tx.parse_from_payload(tx_hex.htb)
  rescue StandardError
    warn "Invalid tx data."
    exit
  end
  if input_index.empty?
    warn "Index of input missing."
    exit
  end
  input_index = input_index.to_i
end

begin
  debugger =
    Tapyrus::ScriptDebugger.new(script_pubkey: script_pubkey, script_sig: script_sig, tx: tx, index: input_index)
rescue ArgumentError => e
  warn e.message
  exit
end

puts "The Script is ready to be executed; you can step execution it by putting the Enter key."
print "> "
while cmd = gets.chomp
  if cmd.length == 0
    result = debugger.step
    if result.halt?
      puts result.message if result.message
      warn result.error
      exit
    elsif result.finished?
      puts "Execution finished."
      exit
    else
      result.print_result
    end
  end
  print "> "
end
